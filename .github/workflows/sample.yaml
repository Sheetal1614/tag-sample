name: tag-demo
on:
  # Manual trigger from the UI
  workflow_dispatch:
    inputs:
      tag:
        description: 'Specify git commit sha to build image from'
      deployto:
        type: choice
        description: 'Deploy the built image on environment.'
        options:
          - None
          - Integration
          - Integration and Qa

  # On push to branch
  push:
    branches:
      - master

jobs:
  checkout_build_and_push_docker_image:
    runs-on: ubuntu-latest
    outputs:
      shortsha: ${{ steps.shortsha.outputs.shortsha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag }}

      - name: Generate git sha(short)
        id: shortsha
        run: echo "shortsha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Print git sha(short)
        run: echo "The git sha(short) is ${{ steps.shortsha.outputs.shortsha }}"

      - name: configure git
        run: |
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"
            git tag -l latest

      - name: Run tag script
        env:
          VERSION1: latest
          VERSION2: second-latest
          VERSION3: third-latest
        run: |
          if [[ ${{ git tag -l latest == env.VERSION1 }} ]]; then
            if [[ ${{ git tag -l latest == env.VERSION2 }} ]]; then
              if [[ ${{ git tag -l latest == env.VERSION3}} ]]; then
                echo "third"
              else
                echo "There is no github tag reference, skipping"
              fi
                echo "second"
            else
                echo "aaa"
            fi
          else
              echo "no latest commit"
          fi

 


#      - name: Run tag script
#        env:
#          VERSION1: latest
#          VERSION2: second-latest
#          VERSION3: third-latest
#        run: |
#          if [[ ${{ git tag -l latest == env.VERSION1 }} ]]; then
#            if [[ ${{ git tag -l latest == env.VERSION2 }} ]]; then
#              if [[ ${{ git tag -l latest == env.VERSION3}} ]]; then
#                echo "third"
#              else
#                echo "There is no github tag reference, skipping"
#              fi
#                echo "second"
#            else
#                echo "aaa"
#            fi
#          else
#              echo "no latest commit"
#          fi

#          - if: ${{ git tag -l latest == env.VERSION }}
#      - name: Run script file
#        if: ${{ git tag -l "$version" }}; then
#        run: |
#
#          git tag -d third_latest
#          git push origin :third_latest
#          fi
#          x=$(git rev-parse second_latest)
#          git tag -d second_latest
#          git push origin :second_latest
#          git tag third_latest ${x}
#          y=$(git rev-parse latest)
#          git tag -d latest
#          git push origin :latest
#          git tag second_latest ${y}
#          git tag latest HEAD
#          git push --tags
#          else
#          z=$(git rev-parse latest)
#          git tag -d latest
#          git push origin :latest
#          git tag second_latest ${z}
#          git tag latest HEAD
#          git push  origin latest_int second_latest
#          fi
#          else
#          git tag latest HEAD
#          git push origin latest
#          fi



